/// <reference types="node" />
import { EventEmitter } from 'events';
import type { ConnectConfig } from 'ssh2';
declare type LocalProxyServerConfig = {
    localAddr: string;
    localPort: number;
    socks5Username?: string;
    socks5Password?: string;
};
export declare type SshTunnelConfig = ConnectConfig & LocalProxyServerConfig;
export declare class SshTunnel extends EventEmitter {
    private connected;
    private closed;
    private connectingPromise?;
    private connections;
    private server;
    private rawConfig;
    private sshClient;
    private serverListen;
    private serverClose;
    private forwardOut;
    constructor(config?: Partial<SshTunnelConfig>);
    get config(): SshTunnelConfig;
    listen(): Promise<void>;
    close(): Promise<void>;
    private connectSsh;
    private closeSshClient;
    private closeOpenConnections;
    private socks5Request;
}
export default SshTunnel;
//# sourceMappingURL=index.d.ts.map